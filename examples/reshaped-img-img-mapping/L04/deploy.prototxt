name: 'L04'

layer {
  name: "input" type: "Input"
  top: "jpeg" top: "label"
  input_param { shape { dim: 1 dim: 64 dim: 20  dim: 20 }
                shape { dim: 1 dim: 64 dim: 20  dim: 20 }
  }
}

layer { name: 'CONV_1' type: 'Convolution'
        bottom: 'jpeg' top: 'CONV_1'
        param { lr_mult: 1}
        param { lr_mult: 0}
        convolution_param { num_output: 1024 kernel_size: 3 stride: 1 pad: 0
                            weight_filler { type: 'gaussian' std: 0.1 }
                            bias_filler { type: 'constant' value: 0 }
        }
}

layer { name: 'relu1' type: 'PReLU'
        bottom: 'CONV_1' top: 'CONV_1'
        prelu_param { filler {type: 'constant' value: 0.01} }
}

layer { name: 'CONV_2' type: 'Convolution'
        bottom: 'CONV_1' top: 'CONV_2'
        param { lr_mult: 1 }
        param { lr_mult: 0 }
        convolution_param { num_output: 4096 kernel_size: 3 stride: 1 pad: 0
                            weight_filler { type: 'gaussian' std: 0.01 }
                            bias_filler { type: 'constant'  value: 0 }
        }
}

layer { name: 'relu2' type: 'PReLU'
        bottom: 'CONV_2' top: 'CONV_2'
        prelu_param { filler {type: 'constant' value: 0.01} }
}

layer { name: 'CONV_3' type: 'Convolution'
        bottom: 'CONV_2' top: 'CONV_3'
        param { lr_mult: 0.1 }
        param { lr_mult: 0 }
        convolution_param { num_output: 2048 kernel_size: 1 stride: 1 pad: 0
                            weight_filler { type: 'gaussian' std: 0.1 }
                            bias_filler { type: 'constant' value: 0 }
        }
}

layer { name: 'relu3' type: 'PReLU'
        bottom: 'CONV_3' top: 'CONV_3'
        prelu_param { filler {type: 'constant' value: 0.01} }
}

layer { name: 'CONV_4' type: 'Convolution'
        bottom: 'CONV_3' top: 'CONV_4'
        param { lr_mult: 1 }
        param { lr_mult: 0 }
        convolution_param { num_output: 64 kernel_size: 1 stride: 1 pad: 0
                            weight_filler { type: 'gaussian' std: 0.001 }
                            bias_filler { type: 'constant' value: 0 }
        }
}

layer { type: 'Crop' name: 'Crop-label'
        top: 'crop-label' bottom: 'label' bottom: 'CONV_4'
        crop_param{ offset: 2 axis: 2}
}

layer { type: 'Crop' name: 'Crop-jpeg'
        top: 'crop-jpeg' bottom: 'jpeg' bottom: 'CONV_4'
        crop_param{ offset: 2 axis: 2}
}

layer { type: 'Eltwise' name: 'Sum'
        top: 'img' bottom: 'CONV_4' bottom: 'crop-jpeg'
        eltwise_param { operation: SUM }
}

layer { type: 'Python' name: 'LOSS'
        top: 'loss' bottom: 'img' bottom: 'crop-label'
        python_param { module: 'cnn_image_processing' layer: 'PyEuclideanLossLayer'
                       param_str: "pixel_norm: true, print: False, print_iter: 1"
        }
        loss_weight: 1
        propagate_down: true propagate_down: false

}

layer { type: 'Python' name: 'DeBlock'
        top:    'deblock-conv_4' top: 'deblock-label'  top: 'deblock-jpeg'
        bottom: 'img'         bottom: 'crop-label' bottom: 'crop-jpeg'
        python_param { module: 'cnn_image_processing' layer: 'PyDeBlockJPEG'
                       param_str: ""}
}

layer { name: 'Scale' type: 'Power'
        bottom: 'deblock-conv_4' top: 'deblock-conv_4'
        power_param { power: 1 scale: 1 shift: 0.5 }
}

layer { name: 'Scale' type: 'Power'
        bottom: 'deblock-jpeg' top: 'deblock-jpeg'
        power_param { power: 1 scale: 1 shift: 0.5 }
}

layer { name: 'Scale' type: 'Power'
        bottom: 'deblock-label' top: 'deblock-label'
        power_param { power: 1 scale: 1 shift: 0.5 }
}


layer { type: 'Python' name: 'PSNR'
       bottom: 'deblock-conv_4' bottom: 'deblock-jpeg' bottom: 'deblock-label'
       python_param: { module: 'cnn_image_processing' layer: 'PyPSNRL'
                       param_str: "max: 1, print_step: 10, history_size: 250, plot_graph: True, graph_name: tr-iPSNR.pdf" }
#       include { phase: TRAIN }
}

layer { type: 'Python' name: 'Visualization'
        bottom: 'deblock-conv_4'
        python_param: { module: 'cnn_image_processing' layer: 'PyVisLayer'
                        param_str: 'scale: 4, norm: 0.004, mean: 0 ,name: cnn'}
}

layer { type: 'Python' name: 'Visualization-jpeg'
        bottom: 'deblock-jpeg'
        python_param: { module: 'cnn_image_processing' layer: 'PyVisLayer'
                        param_str: 'scale: 4, norm: 0.004, mean: 0, name: jpeg'}}

layer { type: 'Python' name: 'Visualization-label'
        bottom: 'deblock-label'
        python_param: { module: 'cnn_image_processing' layer: 'PyVisLayer'
                         param_str: 'scale: 4, norm: 0.004, mean: 0 ,name: label'}
}



