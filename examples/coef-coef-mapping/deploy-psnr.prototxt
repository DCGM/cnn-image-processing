name: 'L04'

input: 'coef' input_dim: 1 input_dim: 64 input_dim: 20 input_dim: 20
input: 'label' input_dim: 1 input_dim: 64 input_dim: 20 input_dim: 20

layer { name: 'CONV_1' type: 'Convolution'
        bottom: 'coef' top: 'CONV_1'
        param { lr_mult: 1}
        param { lr_mult: 0}
        convolution_param { num_output: 512 kernel_size: 3 stride: 1 pad: 0
                            weight_filler { type: 'xavier' }
                            bias_filler { type: 'constant' value: 0 }
        }
}

layer { name: 'relu1' type: 'ReLU'
        bottom: 'CONV_1' top: 'CONV_1'
}

layer { name: 'CONV_2' type: 'Convolution'
        bottom: 'CONV_1' top: 'CONV_2'
        param { lr_mult: 1 }
        param { lr_mult: 0 }
        convolution_param { num_output: 1024 kernel_size: 1 stride: 1 pad: 0
                            weight_filler { type: 'xavier' }
                            bias_filler { type: 'constant'  value: 0 }
        }
}

layer { name: 'relu2' type: 'ReLU'
        bottom: 'CONV_2' top: 'CONV_2'
}

layer { name: 'CONV_3' type: 'Convolution'
        bottom: 'CONV_2' top: 'CONV_3'
        param { lr_mult: 1 }
        param { lr_mult: 0 }
        convolution_param { num_output: 512 kernel_size: 3 stride: 1 pad: 0
                            weight_filler { type: 'xavier' }
                            bias_filler { type: 'constant' value: 0 }
        }
}

layer { name: 'relu2' type: 'ReLU'
        bottom: 'CONV_3' top: 'CONV_3'
}

layer { name: 'CONV_4' type: 'Convolution'
        bottom: 'CONV_3' top: 'CONV_4'
        param { lr_mult: 0.1 }
        param { lr_mult: 0 }
        convolution_param { num_output: 64 kernel_size: 3 stride: 1 pad: 0
                            weight_filler { type: 'gaussian' std: 0.001 }
                            bias_filler { type: 'constant' value: 0 }
        }
}

layer { type: 'Crop' name: 'Crop'
        top: 'crop' bottom: 'label' bottom: 'CONV_4'
        crop_param{ offset: 3 axis: 2}
}

layer { type: 'EuclideanLoss' name: 'Loss'
        bottom: 'CONV_4' bottom: 'crop' top: 'loss'}

layer { type: 'Python' name: 'iDCT-reconstruction'
        top: 'idct-conv' bottom: 'CONV_4'
        python_param { module: 'cnn_image_processing' layer: 'PyIDCTL'
                       param_str: ""}
}

layer { type: 'Python' name: 'iDCT-label'
        top: 'idct-label' bottom: 'crop'
        python_param { module: 'cnn_image_processing' layer: 'PyIDCTL'
                       param_str: ""}
}

layer { type: 'Python' name: 'PSNR'
        bottom: 'idct-conv' bottom: 'idct-label'
        python_param: { module: 'cnn_image_processing' layer: 'PyPSNRL'
                       param_str: "max: 255, print_step: 5" }
}

layer { type: 'Python' name: 'Visualization'
        bottom: 'idct-conv'
        python_param: { module: 'cnn_image_processing' layer: 'PyVisLayer'
                        param_str: 'scale: 2'}}

